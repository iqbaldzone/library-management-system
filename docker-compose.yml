version: '3.3'
services:
  eureka-server:  # service name
#    image: iqbaldzone/eureka-server # pull Eureka-server service from remote repository
    build: ./eureka-server/  # Docker file path
    container_name: discovery-server # Container name
    ports:
      - "8761:8761" # port that to be expose one is service actual port and second for expose

  book-service: # service name
#    image: iqbaldzone/book-service # pull book service from remote repository
    build: ./book-service/  # Docker file path
    container_name: book-service  # Container name
    ports:
      - "5555:5555" # port that to be expose one is service actual port and second for expose
    depends_on:
      - library-db  # service is depends on Database so before this DB should Started
    links:
      - eureka-server # link micro service to Eureka server
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://library-db:3306/library?allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true&useSSL=false # library-db is host name where DB is available, library-db is also service name
      SPRING_DATASOURCE_USERNAME: root  # username for Communication With DB
      SPRING_DATASOURCE_PASSWORD: root  # password for Communication With DB
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka # discovery-server is host name where Eureka server is available, discovery-server is a service name

  user-service: # service name
#    image: iqbaldzone/user-service # pull user service from remote repository
    build: ./user-service/  # Docker file path
    container_name: user-service  # Container name
    ports:
      - "5551:5551" # port that to be expose one is service actual port and second for expose
    depends_on:
      - library-db  # service is depends on Database so before this DB should Started
    links:
      - eureka-server # link micro service to Eureka server
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://library-db:3306/library?allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true&useSSL=false # library-db is host name where DB is available, library-db is also service name
      SPRING_DATASOURCE_USERNAME: root  # username for Communication With DB
      SPRING_DATASOURCE_PASSWORD: root  # password for Communication With DB
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka # discovery-server is host name where Eureka server is available, discovery-server is a service name

  book-assign-service:  # service name
#    image: iqbaldzone/book-assign-service # pull book-assign service from remote repository
    build: ./book-assign-service/ # Docker file path
    container_name: book-assign-service # Container name
    ports:
      - "5552:5552" # port that to be expose one is service actual port and second for expose
    depends_on:
      - library-db  # service is depends on Database so before this DB should Started
    links:
      - eureka-server # link micro service to Eureka server
      - user-service  # link service to user-service
      - book-service  # link service to user-service
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://library-db:3306/library?allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true&useSSL=false # library-db is host name where DB is available, library-db is also service name
      SPRING_DATASOURCE_USERNAME: root  # username for Communication With DB
      SPRING_DATASOURCE_PASSWORD: root  # password for Communication With DB
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka # discovery-server is host name where Eureka server is available, discovery-server is a service name

  library-db: # service name
    image: mysql:latest
    container_name: library-database  # Container name
    restart: on-failure # it use restart service when ever it is fail
    ports:
      - '3308:3306' # port that to be expose one is service actual port and second for expose
    environment:
      MYSQL_ROOT_PASSWORD: root # DB root password
      MYSQL_DATABASE: library # DB name
    volumes:
      - db-data:/var/lib/mysql # It is DB location in docker

volumes:
  db-data:

